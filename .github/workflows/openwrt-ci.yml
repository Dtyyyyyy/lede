#
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  push:
   branches: master

permissions:
  contents: read

jobs:
  build_openwrt:
    name: Build x86 Firmware
    runs-on: ubuntu-latest
    steps:
      - name: Organize Values
        run: |
          export BUILD_DATE=$(TZ=UTC-8 date +"%y-%m-%d_%H-%M-%S")
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v3

      - name: Update Plugins
        run: |
          sed -i '1i src-git haibo https://github.com/haiibo/openwrt-packages' feeds.conf.default
          #OpenClash
          git clone --branch "dev" --single-branch https://github.com/vernesong/OpenClash.git package/OpenClash

          #Design Theme
          git clone https://github.com/gngpp/luci-theme-design.git package/luci-theme-design

          #Design Config
          git clone https://github.com/gngpp/luci-app-design-config.git package/luci-app-design-config
          #git clone https://github.com/haiibo/openwrt-packages

      - name: Update Feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Update Default Setting
        run: |
          sed -i 's/luci-theme-bootstrap/luci-theme-design/' feeds/luci/collections/luci/Makefile
          sed -i 's/192.168.1.1/192.168.88.88/g' package/base-files/files/bin/config_generate
          sed -i 's/theme-bootstrap/theme-argon/g' feeds/luci/collections/luci/Makefile
          sed -i '5i uci set system.@system[0].hostname=DinG' package/lean/default-settings/files/zzz-default-settings

      - name: Generate Configuration File
        run: |
          ls -lA
          rm -rf ./tmp
          rm -rf ./.config*
          touch ./.config

          #定制R4S固件
          cat >> .config <<EOF
          #设置设备
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          #增加参数
          CONFIG_TARGET_ROOTFS_PARTSIZE=3200
          CONFIG_TARGET_KERNEL_PARTSIZE=320
          #删除参数
          CONFIG_TARGET_ROOTFS_EXT4FS=n
          #增加组件
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_ip6tables-extra=y
          CONFIG_PACKAGE_ip6tables-mod-nat=y
          CONFIG_PACKAGE_nano=y
          #增加主题
          CONFIG_PACKAGE_luci-theme-design=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-app-design-config=y
          CONFIG_PACKAGE_luci-app-argon-config=y
          #增加插件
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-unblockmusic=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-advanced=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-store=y
          CONFIG_PACKAGE_luci-app-vssr=y
          CONFIG_PACKAGE_luci-app-wizard=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-onliner=y
          CONFIG_PACKAGE_luci-app-bypass=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-alist=y
          CONFIG_PACKAGE_luci-app-aliddns=y
          CONFIG_PACKAGE_luci-app-aliyundrive-fuse=y
          CONFIG_PACKAGE_luci-app-aliyundrive-webdav=y
          CONFIG_PACKAGE_luci-app-eqos=y
          CONFIG_PACKAGE_luci-app-ddns-go=y
          CONFIG_PACKAGE_luci-app-ddnsto=y
          CONFIG_PACKAGE_luci-app-openvpn=y
          CONFIG_PACKAGE_luci-app-nps=y
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          CONFIG_PACKAGE_luci-app-haproxy-tcp=y
          CONFIG_PACKAGE_luci-app-guest-wifi=y
          #删除插件
          CONFIG_PACKAGE_luci-app-accesscontrol=n
          CONFIG_PACKAGE_luci-app-ddns=n
          CONFIG_PACKAGE_luci-app-vlmcsd=n
          CONFIG_PACKAGE_luci-app-wol=n
          EOF

          make defconfig

      - name: Download Packages
        run: |
          make download -j16
          cat .config
          ls -lA

      - name: Compile Firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare Artifact
        run: |
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf ./.config ./bin/targets/

      - name: Upload Firmware
        uses: actions/upload-artifact@v3
        with:
          name: Firmware_x86_${{env.BUILD_DATE}}
          path: ./bin/targets/
